{"version":3,"file":"bookmarkAPI-40e17e4c.js","sources":["../src/actions/apiActions/bookmarkAPI.ts"],"sourcesContent":["import {\r\n  Bookmark,\r\n  BookmarkCreateRequest,\r\n  BookmarkDeleteRequest,\r\n  BookmarkUpdateRequest,\r\n} from \"../../types\";\r\n\r\ninterface APIResponse<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\nconst apiFetchBookmark = async (\r\n  sessionToken: string,\r\n  page_url: string\r\n): Promise<APIResponse<Bookmark> | null> => {\r\n  if (!sessionToken || !page_url) {\r\n    throw new Error(\"All parameters (sessionToken, page_url) are required\");\r\n  }\r\n\r\n  const base_url = \"http://localhost:3000/api/bookmark\";\r\n  const params = {\r\n    page_url: page_url,\r\n  };\r\n  const queryString = new URLSearchParams(params).toString();\r\n  const url = `${base_url}?${queryString}`;\r\n\r\n  const response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${sessionToken}`,\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! Status: ${response.status}`);\r\n  }\r\n\r\n  const data = (await response.json()) as APIResponse<Bookmark>;\r\n  if (!data.success) {\r\n    throw new Error(data.error || \"Unknown error occurred\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst apiCreateBookmark = async (\r\n  createRequest: BookmarkCreateRequest\r\n): Promise<APIResponse<Bookmark> | null> => {\r\n  const { sessionToken, ...postData } = createRequest;\r\n  if (!sessionToken || !postData.title || !postData.page_url) {\r\n    throw Error(\"Missing required fields (sessionToken, title, page_url).\");\r\n  }\r\n\r\n  const url = \"http://localhost:3000/api/bookmark\";\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${sessionToken}`,\r\n    },\r\n    body: JSON.stringify(postData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! Status: ${response.status}`);\r\n  }\r\n\r\n  const data = (await response.json()) as APIResponse<Bookmark>;\r\n  if (!data.success) {\r\n    throw new Error(data.error || \"Unknown error occurred\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst apiUpdateBookmark = async (updateRequest: BookmarkUpdateRequest) => {\r\n  const { sessionToken, ...updateData } = updateRequest;\r\n  if (!sessionToken || !updateData.id) {\r\n    throw Error(\"Missing required fields (sessionToken, id)\");\r\n  }\r\n\r\n  const url = \"http://localhost:3000/api/bookmark\";\r\n  const response = await fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${sessionToken}`,\r\n    },\r\n    body: JSON.stringify(updateData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  const data = (await response.json()) as APIResponse<Bookmark>;\r\n  if (!data.success) {\r\n    throw new Error(data.error || \"Unknown error occurred\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst apiDeleteBookmark = async (deleteRequest: BookmarkDeleteRequest) => {\r\n  const { sessionToken, ...deleteData } = deleteRequest;\r\n\r\n  return fetch(\"http://localhost:3000/api/bookmark\", {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Authorization: `Bearer ${sessionToken}`,\r\n    },\r\n    body: JSON.stringify(deleteData),\r\n  });\r\n};\r\n\r\nexport {\r\n  apiFetchBookmark,\r\n  apiCreateBookmark,\r\n  apiUpdateBookmark,\r\n  apiDeleteBookmark,\r\n};\r\n"],"names":[],"mappings":"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"}