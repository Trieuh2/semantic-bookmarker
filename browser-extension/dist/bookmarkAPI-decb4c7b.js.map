{"version":3,"file":"bookmarkAPI-decb4c7b.js","sources":["../src/actions/apiActions/bookmarkAPI.ts"],"sourcesContent":["import {\r\n  Bookmark,\r\n  BookmarkCreateRequest,\r\n  BookmarkDeleteRequest,\r\n  BookmarkUpdateRequest,\r\n} from \"../../types\";\r\n\r\ninterface APIResponse<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\nconst apiFetchBookmark = async (\r\n  userId: string,\r\n  sessionToken: string,\r\n  page_url: string\r\n): Promise<APIResponse<Bookmark> | null> => {\r\n  if (!userId || !sessionToken || !page_url) {\r\n    throw new Error(\r\n      \"All parameters (userId, sessionToken, page_url) are required\"\r\n    );\r\n  }\r\n\r\n  const base_url = \"http://localhost:3000/api/bookmark\";\r\n  const params = {\r\n    userId: userId,\r\n    sessionToken: sessionToken,\r\n    page_url: page_url,\r\n  };\r\n  const queryString = new URLSearchParams(params).toString();\r\n  const url = `${base_url}?${queryString}`;\r\n\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! Status: ${response.status}`);\r\n  }\r\n\r\n  const data = (await response.json()) as APIResponse<Bookmark>;\r\n  if (!data.success) {\r\n    throw new Error(data.error || \"Unknown error occurred\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst apiCreateBookmark = async (\r\n  createRequest: BookmarkCreateRequest\r\n): Promise<APIResponse<Bookmark> | null> => {\r\n  const {\r\n    userId,\r\n    sessionToken,\r\n    title,\r\n    page_url,\r\n    note,\r\n    excerpt,\r\n    collection_name,\r\n  } = createRequest;\r\n\r\n  if (!userId || !sessionToken || !title || !page_url) {\r\n    throw Error(\r\n      \"Missing required fields (userId, sessionToken, title, page_url).\"\r\n    );\r\n  }\r\n\r\n  const postData = {\r\n    userId: userId,\r\n    sessionToken: sessionToken,\r\n    title: title,\r\n    page_url: page_url,\r\n    note: note ?? \"\",\r\n    excerpt: excerpt ?? \"\",\r\n    collection_name: collection_name ?? \"Unsorted\",\r\n  };\r\n  const url = \"http://localhost:3000/api/bookmark\";\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(postData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! Status: ${response.status}`);\r\n  }\r\n\r\n  const data = (await response.json()) as APIResponse<Bookmark>;\r\n  if (!data.success) {\r\n    throw new Error(data.error || \"Unknown error occurred\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst apiUpdateBookmark = async (updateRequest: BookmarkUpdateRequest) => {\r\n  const { sessionToken, id } = updateRequest;\r\n\r\n  if (!sessionToken || !id) {\r\n    throw Error(\"Missing required fields (id, sessionToken)\");\r\n  }\r\n\r\n  const url = \"http://localhost:3000/api/bookmark\";\r\n  const response = await fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(updateRequest),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n\r\n  const data = (await response.json()) as APIResponse<Bookmark>;\r\n  if (!data.success) {\r\n    throw new Error(data.error || \"Unknown error occurred\");\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst apiDeleteBookmark = async (deleteRequest: BookmarkDeleteRequest) => {\r\n  return fetch(\"http://localhost:3000/api/bookmark\", {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(deleteRequest),\r\n  });\r\n};\r\n\r\nexport {\r\n  apiFetchBookmark,\r\n  apiCreateBookmark,\r\n  apiUpdateBookmark,\r\n  apiDeleteBookmark,\r\n};\r\n"],"names":[],"mappings":"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"}